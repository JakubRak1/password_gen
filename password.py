import sys
import numpy as np
import string as str


def special_bool(arg):
#Checking value of "arg" and returning false for vale 0 (not included) or true for value 1 (included) for special signs in password
        if(arg==1):
            return True
        elif(arg==0):
            return False
        else:
            print("You didn't put 0 or 1 so password would be without special signs")
            return False


def write_to_file(file):
#Exporting "file" text to external password_generated.txt
    with open('password_generated.txt','a') as f:
        f.write(file + '\n')


def create_password(password_chars=16, special_char=True):
#creating list of random numbers (from 0-4), and then transfer numbers to random letters, numbers of special signs
        list_of_numbers = []
        final_password = []
        for _ in range(password_chars):
            list_of_numbers.append(np.random.randint(1,5))
        if(special_char):
            counting_special=0
            for idx, number in enumerate(list_of_numbers):
                if(counting_special==2):
                    list_of_numbers[idx]=np.random.randint(1,4)
                else:
                    if(number == 4):
                        counting_special+=1
            if(not list_of_numbers.count(4)==2):
            # Condition to special signs
                for _ in range(10*password_chars): #range 10times password lenght to prevent infinite loop
                    list_of_numbers[np.random.randint(0,len(list_of_numbers))]=4
                    if(list_of_numbers.count(4)==2):
                        break
        elif(not special_char):
        # None special signs correct
            for idx, number in enumerate(list_of_numbers):
                list_of_numbers[idx]=np.random.randint(1,4)
        for number in (list_of_numbers):
        # Generating password list by changing numbers to random letters, numbers or specials signs
            if(number==1):
            #1 - Numbers
                final_password.append(str.digits[np.random.randint(0,10)]) 
            elif(number==2):
            #2 - Small letters 
                final_password.append(str.ascii_lowercase[np.random.randint(0,26)])
            elif(number==3):
            #3 - Big letters
                final_password.append(str.ascii_uppercase[np.random.randint(0,26)])
            elif(number==4):
            #4 - Specjal Signs
                final_password.append(str.punctuation[np.random.randint(0,32)])
        write_to_file("".join(final_password))
        print("Password/s are in password_generated.txt")


def main():
    #Run skrypt and checking arguments if they were missing password would be generated by default values
    try:
        if(len(sys.argv)>=3):
            create_password(abs(int(float(sys.argv[1]))),special_bool(abs(int(float(sys.argv[2])))))
        elif(len(sys.argv)==2):
            print("Password would be generated with special signs")
            create_password(abs(int(float(sys.argv[1]))))
        else:
            print("Password would be generated by default values: lenght = 16 with special signs")
            create_password()
    except:
        print("Some thing went wrong so password would be generated by default values: length = 16 with special signs")
        create_password()


if __name__=='__main__':
    main()